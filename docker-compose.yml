version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app_user}"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile.Backend
    container_name: backend
    env_file: .env
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    volumes:
      - ./:/app
    command: "backend"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.Backend
    container_name: celery
    env_file: .env
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    volumes:
      - ./:/app
    command: "celery"

  watchdog:
    build:
      context: .
      dockerfile: Dockerfile.Watchdog
    container_name: watchdog
    env_file: .env
    depends_on:
      celery:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./:/app
    command: >
      sh -c "while ! nc -z redis 6379; do sleep 1; done &&
             python -m watch.checker_path"

volumes:
  redis-data:
  data:
  minio-data: